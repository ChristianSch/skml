

.. _sphx_glr_auto_examples_example_br.py:


=================================
Ensemble Binary Relevance Example
=================================

An example of :class:`skml.problem_transformation.BinaryRelevance`



.. code-block:: python

    from __future__ import print_function

    from sklearn.metrics import hamming_loss
    from sklearn.metrics import accuracy_score
    from sklearn.metrics import f1_score
    from sklearn.metrics import precision_score
    from sklearn.metrics import recall_score
    from sklearn.model_selection import train_test_split
    from sklearn.linear_model import LogisticRegression
    import numpy as np

    from skml.problem_transformation import BinaryRelevance
    from skml.datasets import load_dataset

    X, y = load_dataset('yeast')
    X_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y)

    clf = BinaryRelevance(LogisticRegression())
    clf.fit(X_train, y_train)
    y_pred = clf.predict(X_test)


    print("hamming loss: ")
    print(hamming_loss(y_test, y_pred))

    print("accuracy:")
    print(accuracy_score(y_test, y_pred))

    print("f1 score:")
    print("micro")
    print(f1_score(y_test, y_pred, average='micro'))
    print("macro")
    print(f1_score(y_test, y_pred, average='macro'))

    print("precision:")
    print("micro")
    print(precision_score(y_test, y_pred, average='micro'))
    print("macro")
    print(precision_score(y_test, y_pred, average='macro'))

    print("recall:")
    print("micro")
    print(recall_score(y_test, y_pred, average='micro'))
    print("macro")
    print(recall_score(y_test, y_pred, average='macro'))

**Total running time of the script:** ( 0 minutes  0.000 seconds)



.. only :: html

 .. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: example_br.py <example_br.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: example_br.ipynb <example_br.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
